[{"title":"html css","date":"2020-03-25T12:26:08.000Z","path":"2020/03/25/静态界面小技巧/","text":"1. 导航栏各项字数不一致的时候，不给li设置宽度，直接用padding撑开盒子2. 对于行内元素，如果添加了浮动和定位，那么它就和block一样可以设置宽高，不用转换 3. 子绝父相4. 垂直居中，top: 50%;往上走自身高度的一半 margin-top设置为自身高度的一半（负值） 同理，水平居中可以设置为 left: 50%; margin-left: 自身宽度的一半 5. 轮播图的固定结构 ol&gt;li&gt;a&gt;img6. 盒子不给宽度，默认继承父亲的宽度7. 盒子没有宽度，设置padding值不会撑开盒子7. 文字垂直居中，行高等于高9. overflow: hidden;解决外边距合并问题10. 过渡用在元素的本身，谁要过渡给谁加(transition)11. 2D装换综合写法 transform:translate() rotate() scale().. 当同时有唯一和其他属性的时候，要将位移放在最前面，否则会改变转换效果","tags":[{"name":"web前端","slug":"web前端","permalink":"http://yoursite.com/tags/web%E5%89%8D%E7%AB%AF/"}]},{"title":"WebAPI","date":"2020-03-25T12:26:08.000Z","path":"2020/03/25/WebAPI/WebAPI/","text":"一、WebAPI和js有什么关系呢？ 首先JavaScript是由ECMAScript(JavaScript语法)、DOM(页面文档对象模型)、BOM(浏览器对象模型)组成。 按照我的理解，JavaScript是浏览器上的一个脚本语言，这个语言用来修改浏览器页面上的元素，但是页面上的元素不是散装的，它是一个具有父、子、同胞层级关系的结构，这个结构是HTML的主要框架。JavaScript语法对DOM节点进行增删改查操作，在页面上插入（增加）新的元素，删除元素，获取（查找）元素，以及替换（修改）元素。这些增删改查的操作都被封装成了方法，即DOM的对象方法，JavaScript只是调用这些方法来对DOM进行操作。WebAPI是浏览器的接口，只有通过接口，我们的JavaScript语言才能去控制DOM里的元素和元素的属性，这些接口就是上面说的对DOM元素进行操作的封装好的增删改查方法。 二、js怎么获取页面元素？JavaScript通过DOM接口可以改变网页的内容、结构和样式 文档: 一个页面相当于一个文档 document 元素：页面中的所有标签都是元素 element 节点：页面中的所有内容(标签，属性，文本，注释) node 在DOM中这些都是对象 获取HTML中的元素 通过使用 getElementById() 方法，返回值是一个元素对象通过使用 getElementsByTagName() 方法通过使用 getElementsByClassName() 方法 12&#x2F;&#x2F;获取body元素：document.body&#x2F;&#x2F;获取html元素：document.documentElement (1) 事件：触发—响应机制执行时间步骤： 获取事件源 绑定事件 添加事件处理程序(采取函数赋值形式)12345var div &#x3D; document.querySelector(&#39;div&#39;);div.onclickdiv.onclick &#x3D; function() &#123; console.log(&quot;&quot;)&#125; 鼠标事件 | 触发条件 —|—onclick | 鼠标点击左键触发onmouseover | 鼠标经过触发onmouseout | 鼠标离开触发onfocus | 获得鼠标焦点触发onblur | 失去鼠标焦点触发onmousemove | 鼠标移动触发onmouseup | 鼠标弹起触发onmousedown | 鼠标按下触发 事件三要素 事件源 事件类型 事件处理机制。(2)操作元素 改变元素内容 element.innerTextelement.innerHTML 注 innerText 不识别html标签 innerHTML 识别html标签 这两个属性是可读写的，可以获取元素里面的内容 常用元素的属性操作 href srcid alt title 三、API和WebAPI有什么区别？ API是接口，帮助实现各种功能 WebAPI是针对浏览器提供的接口，针对浏览器做交互效果 WebAPI一般都有输入和输出（参数的传参和返回值），WebAPI很多都是方法(函数)。","tags":[{"name":"web前端","slug":"web前端","permalink":"http://yoursite.com/tags/web%E5%89%8D%E7%AB%AF/"}]},{"title":"2D转换和3D转换","date":"2020-03-18T13:40:00.000Z","path":"2020/03/18/2D转换和3D转换/","text":"2D转换一、转换(transform) 移动：translate 旋转：rotate 缩放：scale 网页中的二维坐标系，是以原点为中心，x轴水平向右，y轴垂直向下 123transform: translate(x, y);transform: translateX(n);transform: translateY(n); 注： 定义2D转换中的移动，沿着X和Y轴移动元素 translate最大的优点是不会影响到其他元素的位置(使用定位和margin会影响) 百分比单位是相对于自身元素宽高的translate:(50%,50%); 对行内标签没有效果 二、动画(animation) 定义动画 调用动画 1234567891011121314@keyframes 动画名称 &#123; &#x2F;* 开始状态 *&#x2F; 0% &#123; &#125; &#x2F;* 结束状态 *&#x2F; 100% &#123; &#125;&#125;元素 &#123; animation-name: 动画名称; animation-duration: 持续时间;&#125; 动画序列从 0% ~ 100% 0%和100%相当于 from 和 to 可以做多个状态的变化，keyframes是关键帧。百分比是整数，里面的百分比就是持续时间的划分 动画常用的属性 @keyframes ：规定动画 animation : 属性简写,除了animation-play-state属性 animation-duration : 动画完成一个周期所花费的时间 animation-timing-function : 动画速度曲线，默认为”ease” animation-delay ：规定动画何时开始。默认是 0。允许负值，-2s 使动画马上开始，但跳过 2 秒进入动画。 animation-iteration-count ：规定动画被播放的次数。默认是 1。 animation-direction ：规定动画是否在下一周期逆向地播放。默认是 “normal”。 animation-play-state ：规定动画是否正在运行或暂停。默认是 “running”。 animation-fill-mode ：属性规定动画在播放之前或之后，保持forwards回到起点backwards(默认)。 12345animation-timing-function: linear | ease | ease-in | ease-out | ease-in-out | steps()animation-iteration-count: n | infinite;animation-direction: normal | alternate;animation-play-state: paused | running;animation-fill-mode : none | forwards | backwards | both; 简写方式 animation: name duration timing-function delay iteration-count direction;animation: name duration 注1、 简写属性不包含animation-play-state; 这个经常和鼠标经过等其他配合使用2、 要动画走回来，不是直接跳回来： animation-direction : alternate3、 盒子动画结束后，停在结束为止： animation-fill-mode : forwards4、 steps()速度曲线的步长 3D转换三维坐标系 x轴：水平向下。y右边是正值，左边是负值y轴：垂直向下。y下面是正值，上面是负值z轴：垂直于屏幕。外正内负 3D位移：translate3d(x,y,z) transform:translateX() transform:translateY() 3D旋转：rotate3d(x,y,z,deg) 透视：perspective 3D呈现：transfrom-style xyz不能省略，如果没有就写0 透视 perspective 透视单位为px透视写到被观察元素的父盒子身上透视越小，物体越大。透视越大，物体越小 rorateX的左手准则 大拇指指向x轴的正方向四指指向旋转的方向 rorateY的左手准则 大拇指指向y轴的正方向四指指向旋转的方向 3D呈现：transfrom-style 控制元素是否开启三维立体控件 transform-style: flat子元素不开启3d立体空间，默认的 transform-style: preserve-3d 子元素开启立体空间 代码写给父级，但是影响的是子盒子 重要属性","tags":[{"name":"css3","slug":"css3","permalink":"http://yoursite.com/tags/css3/"}]}]